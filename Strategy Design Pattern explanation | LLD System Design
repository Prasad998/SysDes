# Creating markdown content for Strategy Design Pattern with UML diagram and examples

markdown_content = """
# üß© Strategy Design Pattern ‚Äì Hindi Explanation (LLD Style)

---

## üìò Definition:
The Strategy Pattern defines a family of algorithms, encapsulates each one, and makes them interchangeable. Strategy lets the algorithm vary independently from clients that use it.

---

## üß† ‡§Ü‡§∏‡§æ‡§® ‡§≠‡§æ‡§∑‡§æ ‡§Æ‡•á‡§Ç ‡§∏‡§Æ‡§ù‡•ã:
> **"Kaam ‡§µ‡§π‡•Ä ‡§π‡•à, ‡§§‡§∞‡•Ä‡§ï‡§æ ‡§¨‡§¶‡§≤‡§§‡§æ ‡§∞‡§π‡§§‡§æ ‡§π‡•à‡•§"**

‡§Ø‡§æ‡§®‡§ø, behavior ‡§ï‡•ã class ‡§ï‡•á ‡§¨‡§æ‡§π‡§∞ ‡§Ö‡§≤‡§ó-‡§Ö‡§≤‡§ó strategies ‡§Æ‡•á‡§Ç define ‡§ï‡§∞‡•ã, ‡§î‡§∞ ‡§ú‡§º‡§∞‡•Ç‡§∞‡§§ ‡§ï‡•á ‡§π‡§ø‡§∏‡§æ‡§¨ ‡§∏‡•á dynamically switch ‡§ï‡§∞ ‡§∏‡§ï‡•ã‡•§

---

## üéØ Real-World Analogy:
> **Payment Gateway** ‚Äì UPI, Credit Card, ‡§î‡§∞ PayPal ‡§∏‡•á payment ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§Ö‡§≤‡§ó-‡§Ö‡§≤‡§ó ‡§§‡§∞‡•Ä‡§ï‡•á, ‡§≤‡•á‡§ï‡§ø‡§® interface ‡§è‡§ï ‡§ú‡•à‡§∏‡§æ: `pay()`.

---

## ‚ùå Without Strategy Pattern:
```java
class PaymentService {
    void pay(String method) {
        if (method.equals("UPI")) {
            System.out.println("Paid via UPI");
        } else if (method.equals("CreditCard")) {
            System.out.println("Paid via Credit Card");
        } else if (method.equals("PayPal")) {
            System.out.println("Paid via PayPal");
        }
    }
}
